{"meta":{"title":"_PSN_ HOMEPAGE","subtitle":"Program Solution Now","description":"Program Solution Now is an entity I started in October 2018 to encourage beginners to embark on the journey on software development, providing immediate solutions to various software developing issues.","author":"Program Solution Now (_PSN_)","url":"http://ericzhng.github.io"},"pages":[{"title":"About Icarus","date":"2018-10-15T04:34:07.455Z","updated":"2018-10-15T04:34:07.455Z","comments":true,"path":"about/index.html","permalink":"http://ericzhng.github.io/about/index.html","excerpt":"","text":"The blog theme you may fall in love with, coming to Hexo. Preview View DocumentationIt is strongly recommended that you read the docs before using Icarus. FeaturesProfile SidebarA nice place to show yourself. You can add your own information in your site’s _config.yml Self-hosted Insite Search EngineWith the help of Insight Search, you can search anything inside your site without any third-party plugin. Custom Comment ServicesIcarus supports several comment services, give you better choices to communicate with your readers. Post Banner &amp; ThumbnailThanks to atika, you can now add thumbnails or banners to every post to create better reading experience. Responsive LayoutIcarus knows on what screen size you are browsering the website, and reorganize the layout to fit your device. Custom Categories &amp; Tags PagesGet your categories and tags listed in single pages to make your blog more methodic. lightgalleryIcarus uses lightgallery.js to showcase your photos. Just enable it in your configuration, and that’s all! SidebarIcarus provides 6 built-in widgets: recent_posts category archives tag tagcloud links All of them are enabled by default. You can edit them in widget setting."},{"title":"Categories","date":"2018-10-15T04:34:07.457Z","updated":"2018-10-15T04:34:07.457Z","comments":true,"path":"categories/index.html","permalink":"http://ericzhng.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-10-15T04:34:07.509Z","updated":"2018-10-15T04:34:07.509Z","comments":true,"path":"tags/index.html","permalink":"http://ericzhng.github.io/tags/index.html","excerpt":"","text":""},{"title":"Markdown","date":"2014-12-25T05:31:00.000Z","updated":"2018-10-15T04:34:07.514Z","comments":true,"path":"tmp/Markdown.html","permalink":"http://ericzhng.github.io/tmp/Markdown.html","excerpt":"A markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF).","text":"A markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF). Block Elements Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules Table Span Elements Links Emphasis Code Images Strikethrough Miscellaneous Automatic Links Backslash Escapes Inline HTML Block ElementsParagraphs and Line BreaksParagraphsHTML Tag: &lt;p&gt; One or more blank lines. (A blank line is a line containing nothing but spaces or tabs is considered blank.) Code: This will be inline. This is second paragraph. Preview: This will beinline. This is second paragraph. Line BreaksHTML Tag: &lt;br /&gt; End a line with two or more spaces. Code: This will be not inline. Preview: This will be notinline. HeadersMarkdown supports two styles of headers, Setext and atx. SetextHTML Tags: &lt;h1&gt;, &lt;h2&gt; “Underlined” using equal signs (=) as &lt;h1&gt; and dashes (-) as &lt;h2&gt; in any number. Code: This is an H1 ============= This is an H2 ------------- Preview: This is an H1This is an H2 atxHTML Tags: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt; Uses 1-6 hash characters (#) at the start of the line, corresponding to &lt;h1&gt; - &lt;h6&gt;. Code: # This is an H1 ## This is an H2 ###### This is an H6 Preview: This is an H1This is an H2This is an H6 Optionally, you may “close” atx-style headers. The closing hashes don’t need to match the number of hashes used to open the header. Code: # This is an H1 # ## This is an H2 ## ### This is an H3 ###### Preview: This is an H1This is an H2This is an H3 BlockquotesHTML Tag: &lt;blockquote&gt; Markdown uses email-style &gt; characters for blockquoting. It looks best if you hard wrap the text and put a &gt; before every line. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse &gt; id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Markdown allows you to be lazy and only put the &gt; before the first line of a hard-wrapped paragraph. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;. Code: &gt; This is the first level of quoting. &gt; &gt; &gt; This is nested blockquote. &gt; &gt; Back to the first level. Preview: This is the first level of quoting. This is nested blockquote. Back to the first level. Blockquotes can contain other Markdown elements, including headers, lists, and code blocks. Code: &gt; ## This is a header. &gt; &gt; 1. This is the first list item. &gt; 2. This is the second list item. &gt; &gt; Here&apos;s some example code: &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); Preview: This is a header. This is the first list item. This is the second list item. Here’s some example code: return shell_exec(&quot;echo $input | $markdown_script&quot;); ListsMarkdown supports ordered (numbered) and unordered (bulleted) lists. UnorderedHTML Tag: &lt;ul&gt; Unordered lists use asterisks (*), pluses (+), and hyphens (-). Code: * Red * Green * Blue Preview: Red Green Blue is equivalent to: Code: + Red + Green + Blue and: Code: - Red - Green - Blue OrderedHTML Tag: &lt;ol&gt; Ordered lists use numbers followed by periods: Code: 1. Bird 2. McHale 3. Parish Preview: Bird McHale Parish It’s possible to trigger an ordered list by accident, by writing something like this: Code: 1986. What a great season. Preview: What a great season. You can backslash-escape (\\) the period: Code: 1986\\. What a great season. Preview: 1986. What a great season. IndentedBlockquoteTo put a blockquote within a list item, the blockquote’s &gt; delimiters need to be indented: Code: * A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item. Preview: A list item with a blockquote: This is a blockquoteinside a list item. Code BlockTo put a code block within a list item, the code block needs to be indented twice — 8 spaces or two tabs: Code: * A list item with a code block: &lt;code goes here&gt; Preview: A list item with a code block: &lt;code goes here&gt; Nested ListCode: * A * A1 * A2 * B * C Preview: A A1 A2 B C Code BlocksHTML Tag: &lt;pre&gt; Indent every line of the block by at least 4 spaces or 1 tab. Code: This is a normal paragraph: This is a code block. Preview: This is a normal paragraph: This is a code block. A code block continues until it reaches a line that is not indented (or the end of the article). Within a code block, ampersands (&amp;) and angle brackets (&lt; and &gt;) are automatically converted into HTML entities. Code: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Preview: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Following sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block. Fenced Code BlocksJust wrap your code in ``` ```` (as shown below) and you won't need to indent it by four spaces.1234Code: Here&apos;s an example: function test() { console.log(&quot;notice the blank line before this function?&quot;); } 123Preview:***Here&apos;s an example: function test() { console.log(“notice the blank line before this function?”);}12345678910***#### Syntax HighlightingIn your fenced block, add an optional language identifier and we&apos;ll run it through syntax highlighting ([Support Languages](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml)).Code: ```ruby require &apos;redcarpet&apos; markdown = Redcarpet.new(&quot;Hello World!&quot;) puts markdown.to_html Preview: 123require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html Horizontal RulesHTML Tag: &lt;hr /&gt;Places three or more hyphens (-), asterisks (*), or underscores (_) on a line by themselves. You may use spaces between the hyphens or asterisks. Code: * * * *** ***** - - - --------------------------------------- ___ Preview: TableHTML Tag: &lt;table&gt; It’s an extension. Separates column by pipe (|) and header by dashes (-), and uses colon (:) for alignment. The outer pipes (|) and alignment are optional. There are 3 delimiters each cell at least for separating header. Code:12345678910111213| Left | Center | Right ||:-----|:------:|------:||aaa |bbb |ccc ||ddd |eee |fff | A | B---|---123|456A |B--|--12|45 Preview: Left Center Right aaa bbb ccc ddd eee fff A B 123 456 A B 12 45 Span ElementsLinksHTML Tag: &lt;a&gt; Markdown supports two style of links: inline and reference. InlineInline link format like this: [Link Text](URL &quot;Title&quot;) Title is optional. Code: This is [an example](http://example.com/ &quot;Title&quot;) inline link. [This link](http://example.net/) has no title attribute. Preview: This is an example inline link. This link has no title attribute. If you’re referring to a local resource on the same server, you can use relative paths: Code: See my [About](/about/) page for details. Preview: See my About page for details. ReferenceYou could predefine link references. Format like this: [id]: URL &quot;Title&quot; Title is also optional. And the you refer the link, format like this: [Link Text][id] Code: [id]: http://example.com/ &quot;Optional Title Here&quot; This is [an example][id] reference-style link. Preview: This is an example reference-style link. That is: Square brackets containing the link identifier (not case sensitive, optionally indented from the left margin using up to three spaces); followed by a colon; followed by one or more spaces (or tabs); followed by the URL for the link; The link URL may, optionally, be surrounded by angle brackets. optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses. The following three link definitions are equivalent: Code: [foo]: http://example.com/ &quot;Optional Title Here&quot; [foo]: http://example.com/ &apos;Optional Title Here&apos; [foo]: http://example.com/ (Optional Title Here) [foo]: &lt;http://example.com/&gt; &quot;Optional Title Here&quot; Uses an empty set of square brackets, the link text itself is used as the name. Code: [Google]: http://google.com/ [Google][] Preview: Google EmphasisHTML Tags: &lt;em&gt;, &lt;strong&gt; Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. One delimiter will be &lt;em&gt;; *double delimiters will be &lt;strong&gt;. Code: *single asterisks* _single underscores_ **double asterisks** __double underscores__ Preview: single asterisks single underscores double asterisks double underscores But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore. You can backslash escape it: Code: \\*this text is surrounded by literal asterisks\\* Preview: *this text is surrounded by literal asterisks* CodeHTML Tag: &lt;code&gt; Wraps it with backtick quotes (`). Code: Use the `printf()` function. Preview: Use the printf() function. To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters: Code: ``There is a literal backtick (`) here.`` Preview: There is a literal backtick (`) here. The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span: Code: A single backtick in a code span: `` ` `` A backtick-delimited string in a code span: `` `foo` `` Preview: A single backtick in a code span: ` A backtick-delimited string in a code span: `foo` ImagesHTML Tag: &lt;img /&gt; Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference. InlineInline image syntax looks like this: ![Alt text](URL &quot;Title&quot;) Title is optional. Code: ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg &quot;Optional title&quot;) Preview: That is: An exclamation mark: !; followed by a set of square brackets, containing the alt attribute text for the image; followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes. ReferenceReference-style image syntax looks like this: ![Alt text][id] Code: [img id]: url/to/image &quot;Optional title attribute&quot; ![Alt text][img id] Preview: StrikethroughHTML Tag: &lt;del&gt; It’s an extension. GFM adds syntax to strikethrough text. Code:1~~Mistaken text.~~ Preview: Mistaken text. MiscellaneousAutomatic LinksMarkdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. Code: &lt;http://example.com/&gt; &lt;address@example.com&gt; Preview: http://example.com/ &#x61;&#x64;&#100;&#x72;&#x65;&#x73;&#x73;&#x40;&#x65;&#120;&#97;&#109;&#x70;&#108;&#x65;&#x2e;&#x63;&#x6f;&#x6d; GFM will autolink standard URLs. Code:1https://github.com/emn178/markdown Preview: https://github.com/emn178/markdown Backslash EscapesMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. Code: \\*literal asterisks\\* Preview: *literal asterisks* Markdown provides backslash escapes for the following characters: Code: \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark Inline HTMLFor any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags. Code: This is a regular paragraph. &lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; This is another regular paragraph. Preview: This is a regular paragraph. Foo This is another regular paragraph. Note that Markdown formatting syntax is not processed within block-level HTML tags. Unlike block-level HTML tags, Markdown syntax is processed within span-level tags. Code: &lt;span&gt;**Work**&lt;/span&gt; &lt;div&gt; **No Work** &lt;/div&gt; Preview: Work No Work"},{"title":"MathJax Example","date":"2016-07-09T00:07:55.000Z","updated":"2018-10-15T04:34:07.506Z","comments":true,"path":"tmp/MathJax-Example.html","permalink":"http://ericzhng.github.io/tmp/MathJax-Example.html","excerpt":"f(a)=12&#x3C0;i&#x222E;&#x3B3;f(z)z&#x2212;adz ConfigurationTo enable MathJax support, just set plugins.mathjax = true in your theme _config.yml file. 1234# Pluginsplugins: ... mathjax: true # options: true, false","text":"f(a)=12&#x3C0;i&#x222E;&#x3B3;f(z)z&#x2212;adz ConfigurationTo enable MathJax support, just set plugins.mathjax = true in your theme _config.yml file. 1234# Pluginsplugins: ... mathjax: true # options: true, false For further MathJax configurations, please edit &lt;theme folder&gt;/layout/plugin/scripts.ejs:1234567&lt;% if (theme.plugins.mathjax) &#123; %&gt; &lt;!-- Edit here --&gt; &lt;script type=\"text/x-mathjax-config\"&gt; MathJax.Hub.Config(&#123; tex2jax: &#123; inlineMath: [['$','$'], ['\\\\(','\\\\)']] &#125; &#125;); &lt;/script&gt; &lt;%- js('https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML') %&gt;&lt;% &#125; %&gt; TeX and LaTeX input Please be noted that when you write Tex/LaTeX in Markdown files, you need to use escape characters to prevent certain signs from being processed by Markdown interpreter. Input12When $a \\ne 0$, there are two solutions to \\\\(ax^2 + bx + c = 0\\\\) and they are$$x = &#123;-b \\pm \\sqrt&#123;b^2-4ac&#125; \\over 2a&#125;.$$ ResultWhen $a \\ne 0$, there are two solutions to \\(ax^2 + bx + c = 0\\) and they are$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$ MathML input Attention: please be noted that newline characters will be transformed to &lt;br&gt; tag by Markdown interpreter and this will interfere with MathML notation. Please write all MathML inline. Input12When&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;&amp;#x2260;&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt;, there are two solutions to &lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;+&lt;/mo&gt; &lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt; &lt;mi&gt;c&lt;/mi&gt; &lt;mo&gt;=&lt;/mo&gt; &lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt; and they are&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;mi&gt;x&lt;/mi&gt; &lt;mo&gt;=&lt;/mo&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;&amp;#x00B1;&lt;/mo&gt;&lt;msqrt&gt;&lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;mrow&gt; &lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;a&lt;/mi&gt; &lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mtext&gt;.&lt;/mtext&gt;&lt;/math&gt; ResultWhena&#x2260;0, there are two solutions to ax2+ bx+ c = 0 and they are x =&#x2212;b&#x00B1;b2&#x2212;4ac 2a . AsciiMath input Attention: please be noted that when you write AsciiMath in Markdown files, you need to use escape characters to prevent certain signs from being processed by Markdown interpreter. Input1When \\`a != 0\\`, there are two solutions to \\`ax^2 + bx + c = 0\\` and they are&lt;p style=&quot;text-align:center&quot;&gt;\\`x = (-b +- sqrt(b^2-4ac))/(2a) .\\`&lt;/p&gt; ResultWhen `a != 0`, there are two solutions to `ax^2 + bx + c = 0` and they are`x = (-b +- sqrt(b^2-4ac))/(2a) .`"}],"posts":[{"title":"Set up hexo for GitHub page","slug":"github-page-hexo","date":"2018-10-13T23:40:00.000Z","updated":"2018-10-15T04:34:07.449Z","comments":true,"path":"2018/10/13/github-page-hexo/","link":"","permalink":"http://ericzhng.github.io/2018/10/13/github-page-hexo/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"Website","slug":"Software/Website","permalink":"http://ericzhng.github.io/categories/Software/Website/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"Hexo","slug":"Hexo","permalink":"http://ericzhng.github.io/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"http://ericzhng.github.io/tags/GitHub/"}]},{"title":"Use of tensorflow model API in Google Colaboratory?","slug":"google-colab-tensorflow","date":"2018-10-13T04:00:00.000Z","updated":"2018-10-15T04:34:07.457Z","comments":true,"path":"2018/10/13/google-colab-tensorflow/","link":"","permalink":"http://ericzhng.github.io/2018/10/13/google-colab-tensorflow/","excerpt":"IntroductionI’ve had a hard time to make tensorflow run on my Windows PC. I was able to install it successfully, but whenever I execute import tensorflow as tf in my python, I got errors saying “DLL file not found”. I was able to use tensorflow 1.1.0 successfully before, but new versions seem to have this issue all the time.","text":"IntroductionI’ve had a hard time to make tensorflow run on my Windows PC. I was able to install it successfully, but whenever I execute import tensorflow as tf in my python, I got errors saying “DLL file not found”. I was able to use tensorflow 1.1.0 successfully before, but new versions seem to have this issue all the time. I gave up on installing tensorflow on my Windows PC, and tried to seek some alternatives. I figured out google Colaboratory could faciliate my learning, so I gave it a try, and it works pretty well. Two things of interest to me are: [1] How do I import other third party and custom packages in google colab?[2] How do I read large numbers of data files from google drive? Reference:","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"Python","slug":"Software/Python","permalink":"http://ericzhng.github.io/categories/Software/Python/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"PyCharm","slug":"PyCharm","permalink":"http://ericzhng.github.io/tags/PyCharm/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"http://ericzhng.github.io/tags/Tensorflow/"},{"name":"Google Colab","slug":"Google-Colab","permalink":"http://ericzhng.github.io/tags/Google-Colab/"}]},{"title":"How to enable CUDA C/C++ support in vs-code in Windows 10?","slug":"vs-code-cuda","date":"2018-10-11T04:00:00.000Z","updated":"2018-10-15T04:34:07.453Z","comments":true,"path":"2018/10/11/vs-code-cuda/","link":"","permalink":"http://ericzhng.github.io/2018/10/11/vs-code-cuda/","excerpt":"In this blog, I want to show users how to set up vs-code for CUDA C/C++ code in Windows 10.","text":"In this blog, I want to show users how to set up vs-code for CUDA C/C++ code in Windows 10. IntroductionI’ve been working on cuda programming in Visual Studio, which can be set up easily. However, since I play with vs-code, I would like to use vs-code for cuda as well. So In this blog, I want to show users how to set up vs-code for cuda in Windows. There are some major steps you need to take, in order to run/debug cuda code using vs-code. (Optional, if done already) Enable Linux Bash shell in Windows 10 and install vs-code in Windows 10. Download the extension in vs-code: vscode-cudacpp. It is mainly for syntax and snippets. Download the sample code from my GitHub repository. Press Ctrl+Shift+B in vs-code, choose build to compile the code. Choose run to run the executable. Currently it is not able to enable cuda-debugger for cuda in vs-code in Windows. If you were to do everything in bash, then there might be a possibility to configure cuda-debugger. But it is OK to use Windows C/C++ debugger, to only debug CPU code. c_cpp_properties.json 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&#123; &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;Linux&quot;, &quot;includePath&quot;: [ &quot;$&#123;workspaceRoot&#125;&quot;, &quot;/usr/include&quot;, &quot;/usr/local/include&quot; ], &quot;defines&quot;: [], &quot;browse&quot;: &#123; &quot;path&quot;: [ &quot;/usr/include&quot;, &quot;/usr/local/include&quot;, &quot;$&#123;workspaceRoot&#125;&quot; ], &quot;limitSymbolsToIncludedHeaders&quot;: true, &quot;databaseFilename&quot;: &quot;&quot; &#125;, &quot;intelliSenseMode&quot;: &quot;clang-x64&quot; &#125;, &#123; &quot;name&quot;: &quot;Win32&quot;, &quot;includePath&quot;: [ &quot;$&#123;workspaceRoot&#125;&quot;, &quot;C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.10.25017/include/*&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/um&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/ucrt&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/shared&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/winrt&quot;, &quot;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include&quot;, &quot;C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin&quot; ], &quot;defines&quot;: [ &quot;_DEBUG&quot;, &quot;UNICODE&quot; ], &quot;browse&quot;: &#123; &quot;path&quot;: [ &quot;C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.10.25017/include/*&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/um&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/ucrt&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/shared&quot;, &quot;C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/winrt&quot;, &quot;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include&quot;, &quot;C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin&quot;, &quot;$&#123;workspaceRoot&#125;&quot; ], &quot;limitSymbolsToIncludedHeaders&quot;: true, &quot;databaseFilename&quot;: &quot;&quot; &#125;, &quot;intelliSenseMode&quot;: &quot;msvc-x64&quot; &#125; ], &quot;version&quot;: 4&#125; tasks.json 123456789101112131415161718192021222324252627&#123; // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format &quot;version&quot;: &quot;2.0.0&quot;, &quot;echoCommand&quot;: true, &quot;tasks&quot;: [ &#123; &quot;label&quot;: &quot;build&quot;, &quot;command&quot;: &quot;nvcc&quot;, &quot;args&quot;: [&quot;-g&quot;, &quot;-o&quot;, &quot;maintest.exe&quot;, &quot;src/hellocuda.cu&quot;], &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125;, &quot;problemMatcher&quot;: [] &#125;, &#123; &quot;label&quot;: &quot;run&quot;, &quot;command&quot;: &quot;./maintest.exe&quot;, &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125;, &quot;problemMatcher&quot;: [] &#125; ]&#125; launch.json 12345678910111213141516&#123; &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;(Windows) Launch&quot;, &quot;type&quot;: &quot;cppvsdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/maintest.exe&quot;, &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: true &#125; ]&#125; Reference: [1] .","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"vs-code","slug":"Software/vs-code","permalink":"http://ericzhng.github.io/categories/Software/vs-code/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"WSL","slug":"WSL","permalink":"http://ericzhng.github.io/tags/WSL/"},{"name":"bash","slug":"bash","permalink":"http://ericzhng.github.io/tags/bash/"},{"name":"vs-code","slug":"vs-code","permalink":"http://ericzhng.github.io/tags/vs-code/"},{"name":"cuda","slug":"cuda","permalink":"http://ericzhng.github.io/tags/cuda/"},{"name":"cpp","slug":"cpp","permalink":"http://ericzhng.github.io/tags/cpp/"}]},{"title":"How to set up vs-code for C++ in Windows 10?","slug":"vs-code-cpp","date":"2018-10-10T04:00:00.000Z","updated":"2018-10-15T04:34:07.463Z","comments":true,"path":"2018/10/10/vs-code-cpp/","link":"","permalink":"http://ericzhng.github.io/2018/10/10/vs-code-cpp/","excerpt":"In this blog, I want to show users how to set up vs-code for C/C++ code in Windows 10 using Linux subsystem, or Windows Subsystem for Linux (WSL).","text":"In this blog, I want to show users how to set up vs-code for C/C++ code in Windows 10 using Linux subsystem, or Windows Subsystem for Linux (WSL). IntroductionI’ve started following vs-code (Visual Studio Code) since 2017, first in Ubuntu, then in Windows. But I’ve never actually debugged C/C++ code in Windows using vs-code, mainly because there isn’t a C/C++ compiler free of charge provided in Windows, and usually you have to configure a virtual machine [1] in order to debug/run C/C++ program. Putting that aside, vs-code is such a convenient tool that I definitely recommend for programmers to adopt it. It is much lighter than Visual Studio and also gives users more freedom to configure. There are some major steps you need to take, in order to run/debug C/C++ code using vs-code in Windows 10. Enable Linux Bash shell in Windows 10. Install vs-code in Windows 10. Write, debug and run C/C++ code in vs-code. 1. Enable Linux Bash shell in Windows 10 Windows 10 Settings -&gt; Update And Security -&gt; For Developers -&gt; Turn on Developer mode. Control Panel -&gt; Programs -&gt; Windows Subsystem for Linux, check it and click OK to return. Open Start at lower left of the screen and type in bash, run it. In the bash.exe, it might prompt a message asking to install the system, type “Y” to continue. If not, go to Microsoft Store, search for Ubuntu, and install it. You might need to restart the computer. After installation, create your account and password for Linux. Every time you want to start bash, either start cmd and type bash, or search for bash directly. 2. Install vs-code in Windows 10 Downloading newest version vs-code here. Install it in Windows 10. After installation, you probably want to install a few extensions for C/C++ programming as well. Here is a list of possible extensions you might want to use. Then you are free to go. C/C++ C/C++ Intellisense, etc. The official website contains some pretty good tutorials where you can learn configuring vs-code. 3. Write, debug and run C/C++ code in vs-code. Create a new folder named test-cpp-vs-code, and use vs-code to open the folder. You can create a test.cpp file in vs-code and copy the following code: 1234567891011#include &lt;stdio.h&gt;#include &lt;math.h&gt;#include &lt;iostream&gt;int main() &#123; char strName[] = &quot;Eric&quot;; std::cout&lt;&lt; &quot;Hello&quot; &lt;&lt; strName &lt;&lt; std::endl; return 0;&#125; Next step, setting up configuration files for vs-code. IntelliSense: generate a c_cpp_properties.json file by running C/Cpp: Edit configurations command from the Command Palette (Ctrl+Shift+P) and add missing include header directories. Build your code: create a tasks.json file by running Tasks: Configure Tasks comand in Command Palette, add the compiler information and tasks. To build the prject, run Tasks: Run Build Tasks (Ctrl+Shift+B). Debug your code: generate a launch.json file, by going to Debug view, click the configure icon and then select C++ (Windows) from teh Select Environment dropdown. Some common shortcuts: Format Document: Shift+Alt+F, Ctrl+K/Ctrl+F Search for symbols: Ctrl+Shift+O Go to definition: F12 To build: Ctrl+Shift+B For more details about the settings files, please refer to my GitHub repository for the sample source code. c_cpp_properties.json 12345678910111213141516171819202122232425262728293031323334353637383940&#123; &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;WSL&quot;, &quot;intelliSenseMode&quot;: &quot;gcc-x64&quot;, &quot;compilerPath&quot;: &quot;/usr/bin/gcc&quot;, &quot;includePath&quot;: [ &quot;$&#123;workspaceFolder&#125;/**&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/c++/5&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/x86_64-linux-gnu/c++/5&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/c++/5/backward&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/lib/gcc/x86_64-linux-gnu/5/include&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/local/include&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/x86_64-linux-gnu&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include&quot; ], &quot;defines&quot;: [ &quot;__linux__&quot;, &quot;__x86_64__&quot; ], &quot;browse&quot;: &#123; &quot;path&quot;: [ &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/c++/5&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/x86_64-linux-gnu/c++/5&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/lib/gcc/x86_64-linux-gnu/5/include&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/local/include&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/x86_64-linux-gnu&quot;, &quot;$&#123;localappdata&#125;/Packages/CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc/LocalState/rootfs/usr/include/*&quot; ], &quot;limitSymbolsToIncludedHeaders&quot;: true, &quot;databaseFilename&quot;: &quot;&quot; &#125;, &quot;cStandard&quot;: &quot;c11&quot;, &quot;cppStandard&quot;: &quot;c++17&quot; &#125; ], &quot;version&quot;: 4&#125; tasks.json12345678910111213141516171819202122232425262728&#123; // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format &quot;version&quot;: &quot;2.0.0&quot;, &quot;command&quot;: &quot;bash&quot;, &quot;tasks&quot;: [ &#123; &quot;label&quot;: &quot;build&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;g++ -g test.cpp -o maintest.out&quot;, &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125;, &quot;problemMatcher&quot;: [] &#125;, &#123; &quot;label&quot;: &quot;run&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;./maintest.out&quot;, &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125;, &quot;problemMatcher&quot;: [] &#125; ]&#125; launch.json12345678910111213141516171819202122232425262728293031323334353637383940&#123; // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;(gdb) Bash on Windows Launch&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;./maintest.out&quot;, &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, // NOTE: you have to specify explicitly the location of files &quot;cwd&quot;: &quot;/mnt/e/Repos/MyRepos/test-vs-code-windows-subsysytem-linux&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: true, &quot;windows&quot;: &#123; &quot;MIMode&quot;: &quot;gdb&quot;, &quot;setupCommands&quot;: [ &#123; &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: true &#125; ] &#125;, &quot;pipeTransport&quot;: &#123; &quot;debuggerPath&quot;: &quot;/usr/bin/gdb&quot;, &quot;pipeProgram&quot;: &quot;c:\\\\Windows\\\\WinSxS\\\\amd64_microsoft-windows-lxss-bash_31bf3856ad364e35_10.0.17134.1_none_251beae725bc7de5\\\\bash.exe&quot;, &quot;pipeArgs&quot;: [&quot;-c&quot;], &quot;pipeCwd&quot;: &quot;&quot; &#125;, &quot;sourceFileMap&quot;: &#123; &quot;/mnt/c&quot;: &quot;c:\\\\&quot;, &quot;/mnt/e&quot;: &quot;e:\\\\&quot; &#125; &#125; ]&#125; Reference: [1] Configure complier path using Windows Subsystem for Linux. [2] Windows 10’s Windows Subsystem for Linux","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"vs-code","slug":"Software/vs-code","permalink":"http://ericzhng.github.io/categories/Software/vs-code/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"WSL","slug":"WSL","permalink":"http://ericzhng.github.io/tags/WSL/"},{"name":"bash","slug":"bash","permalink":"http://ericzhng.github.io/tags/bash/"},{"name":"vs-code","slug":"vs-code","permalink":"http://ericzhng.github.io/tags/vs-code/"}]},{"title":"How to set up tensorflow in PyCharm in Windows?","slug":"tensorflow-pycharm","date":"2018-09-18T04:00:00.000Z","updated":"2018-10-15T04:34:07.452Z","comments":true,"path":"2018/09/18/tensorflow-pycharm/","link":"","permalink":"http://ericzhng.github.io/2018/09/18/tensorflow-pycharm/","excerpt":"In this blog, I would like to show you how to set up tensorflow in PyCharm in Window.","text":"In this blog, I would like to show you how to set up tensorflow in PyCharm in Window. Major steps Download PyCharm community edition from PyCharm website and install it in Windows 10. Download and install Anaconda from Anaconda website. Open PyCharm, click Create New Project, give the folder a name in Location, select Existing interpreter of python.exe in Anaconda3 folder, and click OK. Go to File-&gt;Settings-&gt;Project:[your project name]-&gt;Project Interpreter, you can choose different interpreters you installed before, or create new interpreter as conda virtual environment. Click ‘+’ to install new packages: tensorflow, opencv, etc. Go back to the editor, once you are done installing the packages, right click on the project, New-&gt;Python File, naming it as test.py. Put following code in test.py file, and run the test. If it passes, then the installation is successful. Otherwise there might be some errors. import tensorflow as tf&#39; &#39;print(tf.__version__) Some common errorsError 1 When executing step 7, you may came across errors like the following: Error Messages:“Traceback (most recent call last):File “C:\\Users\\Hui Zhang\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py”, line 58, in from tensorflow.python.pywrap_tensorflow_internal import *File “C:\\Users\\Hui Zhang\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py”, line 28, in _pywrap_tensorflow_internal = swig_import_helper()File “C:\\Users\\Hui Zhang\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py”, line 24, in swig_import_helper_mod = imp.load_module(‘_pywrap_tensorflow_internal’, fp, pathname, description)File “C:\\Users\\Hui Zhang\\AppData\\Local\\Programs\\Python\\Python35\\lib\\imp.py”, line 242, in load_module return load_dynamic(name, filename, file)File “C:\\Users\\Hui Zhang\\AppData\\Local\\Programs\\Python\\Python35\\lib\\imp.py”, line 342, in load_dynamic return _load(spec)ImportError: DLL load failed: A dynamic link library (DLL) initialization routine failed.” Solution It is because old CPU doesn’t support AVX, and you need to install using the source code of tensorflow. You need to follow [3] to install tensorflow from source file. Reference: [1] Check SSE/AVX instruction support [2] Issues of installing tensorflow with DLL error [3] Build from source on Windows","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"Python","slug":"Software/Python","permalink":"http://ericzhng.github.io/categories/Software/Python/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"PyCharm","slug":"PyCharm","permalink":"http://ericzhng.github.io/tags/PyCharm/"},{"name":"Tensorflow","slug":"Tensorflow","permalink":"http://ericzhng.github.io/tags/Tensorflow/"}]},{"title":"How to set up Jekyll for github pages in Windows?","slug":"github-page-jekyll","date":"2018-09-14T04:00:00.000Z","updated":"2018-10-15T04:34:07.452Z","comments":true,"path":"2018/09/14/github-page-jekyll/","link":"","permalink":"http://ericzhng.github.io/2018/09/14/github-page-jekyll/","excerpt":"In this blog, I want to talk about how to set up Jekyll in Windows environment, mainly Windows 10, since you can enable the Linux bash.","text":"In this blog, I want to talk about how to set up Jekyll in Windows environment, mainly Windows 10, since you can enable the Linux bash. Major steps1. Set up Linux subsystem in Windows 10 In Windows 10, go to Settings -&gt; Update &amp; Security -&gt; For Developers, select Developer Mode under “Use developer features”. Navigate to Control Panel -&gt; Programs and Features, Click “Turn Windows features on or off”, and toggle “Windows Subsystem for Linux” to on and click OK to return. Restart your computer to take effects. After restart, open Bash by searching it in search box, and type “y” to install the linux subsystem. Sometimes, you will be prompted to go to Microsoft Store to download and install it. Choose ubuntu and click “Get” to download and install. Create a user name and password for an account. If everything goes successfully, you should be able to run common linux commands such as clear and ls in the Bash. 2. Install all necessary files for Jekyll in Linux subsystem Open Bash in Windows 10, and update our repo lists and packages sudo apt-get update -y sudo apt-get upgrade -y (Optional) Add the repository from BrightBox, which has an optimized Ruby version in Ubuntu. sudo apt-add-repository ppa:brightbox/ruby-ng Before we install Jekyll, we need to make sure we have all the required dependencies. sudo apt-get update sudo apt-get install build-essential patch ruby-dev zlib1g-dev liblzma-dev (might work as well, same function as last commands) sudo apt-get install ruby ruby-dev make build-essential Update Ruby gems sudo gem update Install Jekyll sudo gem install jekyll bundler Test whether Jekyll is installed successfully jekyll -v Install all of the required gems bundle install 3. Build your local Jekyll site forked from GitHub Open cmd, and type bash to get in Bash environment. In Bash, navigate to the root directory of your local Jekyll site repository. Run following command to run the Jekyll site: bundle exec jekyll serve Preview the changes in your web browser at “localhost:4000”. Some common errorsError 1 When executing bundle exec jekyll serve, you may came across errors like the following: “Could not find minitest-5.11.3 in any of the sources” “Run bundle install to install missing gems.” Solution This is most probably you forget to execute last command in Step 2. Type bundle install in Bash and execute. You may be required to input your password. Error 2 When executing bundle install, the following error messages might appear: “Gem::Ext::BuildError: ERROR: Failed to build gem native extension.” “An error occurred while installing nokogiri (1.8.4), and Bundler cannot continue. Make sure that gem install nokogiri -v &#39;1.8.4&#39; --source &#39;https://rubygems.org/&#39; succeeds before bundling.” Solution First install nokogiri by itself in Linux subsystem (‘sudo gem install nokogiri’), then try “bundle install” again! Reference: [1] How to Enable the Linux Bash Shell in Windows 10? [2] Setting up your GitHub Pages site locally with Jekyll. [3] Jekyll on Windows.","categories":[{"name":"Software","slug":"Software","permalink":"http://ericzhng.github.io/categories/Software/"},{"name":"Website","slug":"Software/Website","permalink":"http://ericzhng.github.io/categories/Software/Website/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"http://ericzhng.github.io/tags/Windows/"},{"name":"GitHub","slug":"GitHub","permalink":"http://ericzhng.github.io/tags/GitHub/"},{"name":"Jekyll","slug":"Jekyll","permalink":"http://ericzhng.github.io/tags/Jekyll/"},{"name":"WSL","slug":"WSL","permalink":"http://ericzhng.github.io/tags/WSL/"}]}]}